import Head from 'next/head'
import { HeroUnit } from '../components/hero-unit'
import Layout from '../components/layout'
import styled from 'styled-components'
import Container from 'react-bootstrap/Container'
import Row from 'react-bootstrap/Row'
import Col from 'react-bootstrap/Col'
import { PageProps } from '../pages/[slug]'
import {
  ModelPostType,
  ProductPostType,
  SeriesPostType,
  WordPressFile
} from '../data/types'
import { FaFilePdf } from 'react-icons/fa'
import ProductNav from '../components/product-nav'
import Image from 'next/image'
import Accordion, {
  AccordionContent,
  AccordionTitle
} from '../components/accordion'
import { StyledButtonLink } from '../components/links'
import { getImageData } from '../data'

export interface SeriesPageProps extends PageProps {
  models: ModelPostType[]
  products: ProductPostType[]
  relatedSeries: SeriesPostType[]
  series: SeriesPostType[]
  seriesProduct: ProductPostType
  page: SeriesPostType
}

export default function SeriesTemplate(props: SeriesPageProps) {
  const { imgAlt, imgSrc, imgHeight, imgWidth } = getImageData(
    props.page?._embedded?.['wp:featuredmedia'][0]
  )

  const isPFIpage = props.page.slug.startsWith('pfi')

  return (
    <Layout {...props}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <HeroUnit
        imgSrc={props.heroImg.media_details.sizes.full.source_url}
        isPFIndustrial={isPFIpage}
      >
        {!isPFIpage && (
          <>
            <Row>
              <Col>
                <ProductNav products={props.products} light />
              </Col>
            </Row>
            <Row>
              <Col>
                <div className='content'>
                  <SeriesTitle isPFIpage={false}>
                    {props.page.title.rendered} Series
                  </SeriesTitle>
                  <SeriesDescription isPFIpage={false}>
                    {props.page.acf.description}
                  </SeriesDescription>
                </div>
              </Col>
            </Row>
          </>
        )}
      </HeroUnit>
      <Main>
        {isPFIpage && (
          <Row>
            <Col>
              <SeriesTitle isPFIpage>
                {props.page.title.rendered} Series
              </SeriesTitle>
              <SeriesDescription isPFIpage>
                {props.page.acf.description}
              </SeriesDescription>
            </Col>
          </Row>
        )}
        <Row>
          <Col sm={12} md={6}>
            <Image
              alt={imgAlt}
              src={imgSrc}
              height={imgHeight}
              width={imgWidth}
              layout='responsive'
            />
          </Col>
          <Col sm={12} md={6}>
            <FeaturedTitle>Details</FeaturedTitle>
            <FeaturedContent
              dangerouslySetInnerHTML={{ __html: props.page.content.rendered }}
            />
          </Col>
        </Row>
        <DownloadRow>
          {props.page.acf.datasheet && (
            <DownloadCol
              title={`${props.page.title.rendered} Series Datasheet`}
              file={props.page.acf.datasheet}
            />
          )}
          {props.page.acf['operation_&_maint_manual'] && (
            <DownloadCol
              title='Operation & Maint. Manual'
              file={props.page.acf['operation_&_maint_manual']}
            />
          )}
          {props.page.acf.sample_spec_sheet && (
            <DownloadCol
              title='Sample Spec. Sheet'
              file={props.page.acf.sample_spec_sheet}
            />
          )}
          {props.page.acf.optional_file && (
            <DownloadCol
              title={props.page.acf.optional_file.title}
              file={props.page.acf.optional_file}
            />
          )}
        </DownloadRow>
        {props.page.acf.series_models && (
          <Row>
            <Col>
              <ModelTitle>Select a Model</ModelTitle>
              <ModelDescription>View product summary</ModelDescription>
            </Col>
          </Row>
        )}
        {props.page.acf.series_models && (
          <AccordionRow>
            <Col>
              <Accordion>
                {props.models.map((model, i) => (
                  <div key={model.id}>
                    <AccordionTitle accordionIndex={i}>
                      {model.title.rendered}
                    </AccordionTitle>
                    <AccordionContent accordionIndex={i}>
                      <Row>
                        {model.acf.model_stats && (
                          <Col xs={12} md={8}>
                            <ul>
                              {model.acf.model_stats.map((stat, s) => (
                                <li key={s}>
                                  <span>{stat.title}:</span>{' '}
                                  <span>{stat.value}</span>
                                </li>
                              ))}
                            </ul>
                          </Col>
                        )}
                        {model.acf.model_files && (
                          <Col xs={12} md={4}>
                            <strong>{model.acf.file_names}</strong>
                            <ul>
                              {model.acf.model_files.map((mf, f) => (
                                <li key={f}>
                                  {mf.title}:
                                  {mf.file ? (
                                    <a
                                      href={mf.file.url}
                                      target='_blank'
                                      rel='noopener noreferrer'
                                    >
                                      DOWNLOAD
                                    </a>
                                  ) : (
                                    <span>* Consult Factory</span>
                                  )}
                                </li>
                              ))}
                            </ul>
                          </Col>
                        )}
                      </Row>
                    </AccordionContent>
                  </div>
                ))}
              </Accordion>
            </Col>
          </AccordionRow>
        )}
        {props.page.acf.model_notes && (
          <Row>
            <Col>
              <ModelNotes
                dangerouslySetInnerHTML={{ __html: props.page.acf.model_notes }}
              />
            </Col>
          </Row>
        )}
        {props.seriesProduct?.title && (
          <Row>
            <Col>
              <ProductTitle>{props.seriesProduct.title.rendered}</ProductTitle>
            </Col>
          </Row>
        )}
        {props.relatedSeries.length > 0 && (
          <Row style={{ justifyContent: 'center' }}>
            {props.relatedSeries.map((relatedSeries) => (
              <RelatedModel key={relatedSeries.id} xs={12} md={4}>
                <RelatedTitle>{relatedSeries.title.rendered}</RelatedTitle>
                <RelatedExcerpt>{relatedSeries.acf.description}</RelatedExcerpt>
                <StyledButtonLink primary href={relatedSeries.slug}>
                  View Product
                </StyledButtonLink>
              </RelatedModel>
            ))}
          </Row>
        )}
      </Main>
    </Layout>
  )
}

const DownloadCol = ({
  title,
  file
}: {
  title: string
  file: WordPressFile
}) => (
  <Col xs={12} sm={3}>
    <Download>
      <PDFicon />
      <p>
        <span>{title}</span>
        <a href={file.url} target='_blank' rel='noopener noreferrer'>
          DOWNLOAD
        </a>
      </p>
    </Download>
  </Col>
)

const Main = styled(Container)`
  padding: 45px 15px;
`

const SeriesTitle = styled.h1<{ isPFIpage: boolean }>`
  margin-top: 3rem;
  text-transform: uppercase;
  ${(props) => props.isPFIpage && 'text-align: center;'}
`
const SeriesDescription = styled.p<{ isPFIpage: boolean }>`
  font-size: 18px;
  text-transform: uppercase;
  ${(props) =>
    props.isPFIpage &&
    `
      text-align: center;
      margin-bottom: 3rem;
  `}
`

const FeaturedTitle = styled.h2`
  color: ${({ theme }) => theme.primary};
  font-size: 36px;
`
const FeaturedContent = styled.div`
  color: ${({ theme }) => theme.body};
  font-size: 18px;
`

const DownloadRow = styled(Row)`
  justify-content: center;
  margin-top: 3rem;
`

const Download = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;

  @media (max-width: 383px) {
    justify-content: flex-start;
  }

  p {
    display: flex;
    flex-direction: column;
    margin-bottom: 0;
    margin-left: 10px;
    color: ${({ theme }) => theme.body};
  }

  a {
    text-transform: uppercase;
    &,
    &:hover {
      color: ${({ theme }) => theme.secondary};
    }
  }
`
const PDFicon = styled(FaFilePdf)`
  color: ${({ theme }) => theme.primary};
  font-size: 3rem;
`

const AccordionRow = styled(Row)`
  ul {
    &:first-child {
      display: grid;
      grid-template-columns: 1fr 1fr;

      @media (max-width: 575px) {
        grid-template-columns: 1fr;
      }
    }

    &:not(:first-child) {
      span {
        margin-left: 5px;
      }
    }
  }
`

const ModelTitle = styled.h2`
  text-align: center;
  margin-top: 4rem;
  margin-bottom: 1rem;
`
const ModelDescription = styled.p`
  text-align: center;
`
const ModelNotes = styled.p`
  text-align: center;
`

const ProductTitle = styled.h2`
  margin-top: 4rem;
  margin-bottom: 3rem;
  text-align: center;
`

const RelatedModel = styled(Col)`
  text-align: center;

  &:not(:last-of-type) {
    margin-bottom: 2rem;
  }
`

const RelatedTitle = styled.h4`
  color: ${({ theme }) => theme.primary};
  font-size: 1.5rem;
`

const RelatedExcerpt = styled.p`
  color: ${({ theme }) => theme.body};
`
